@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin hover-focus() {

}

@function theme-color($key: "primary") {
  @return map-get($theme-colors, $key);
}

@function theme-color-level($color-name: "primary", $level: 0) {
  $color: theme-color($color-name);
  $color-base: if($level > 0, $black, $white);
  $level: abs($level);

  @return mix($color-base, $color, $level * $theme-color-interval);
}

@mixin box-shadow($color,$inset:false) {
  @if $inset {
    $inset: inset;
  }
  -webkit-box-shadow: $inset 0px 0px 15px -4px $color;
  -moz-box-shadow: $inset 0px 0px 15px -4px $color;
  box-shadow: $inset 0px 0px 15px -4px $color;
}

@mixin gradient($start_color, $end_color,$r:x,$deg: 45deg) {

  @if $r==x {

  } @else {

  }
  background-color: $start_color;
  background-image: -moz-linear-gradient(top, $start_color 0%, $end_color 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $start_color), color-stop(100%, $end_color));
  background-image: -webkit-linear-gradient(top, $start_color 0%, $end_color 100%);
  background-image: -o-linear-gradient(top, $start_color 0%, $end_color 100%);
  background-image: -ms-linear-gradient(top, $start_color 0%, $end_color 100%);
  background-image: linear-gradient(top, $start_color 0%, $end_color 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start_color}', endColorstr=#{$end_color}, GradientType=1);
  background-repeat: repeat-x;

}

@mixin gradient-x($start_color, $end_color) {
  background-color: $start_color;
  background-image: -moz-linear-gradient(top, $start_color 0%, $end_color 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $start_color), color-stop(100%, $end_color));
  background-image: -webkit-linear-gradient(top, $start_color 0%, $end_color 100%);
  background-image: -o-linear-gradient(top, $start_color 0%, $end_color 100%);
  background-image: -ms-linear-gradient(top, $start_color 0%, $end_color 100%);
  background-image: linear-gradient(top, $start_color 0%, $end_color 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start_color}', endColorstr=#{$end_color}, GradientType=1);
  background-repeat: repeat-x;
}

@mixin gradient-y($start_color, $end_color) {
  background-color: $start_color;
  background-image: -webkit-gradient(linear, left top, right bottom, from($start_color), to($end_color));
  background-image: -webkit-linear-gradient(left, $start_color, $end_color);
  background-image: -moz-linear-gradient(left, $start_color, $end_color);
  background-image: -ms-linear-gradient(left, $start_color, $end_color);
  background-image: -o-linear-gradient(left, $start_color, $end_color);
  background-image: linear-gradient(to right, $start_color, $end_color);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start_color}', endColorstr=#{$end_color}, GradientType=1);
  background-repeat: repeat-x;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin test {
  padding-left: 0;
  list-style: none;
}
@mixin transition($speed:1s, $animate:ease-in-out, $style:all) {
  -webkit-transition: $style $speed $animate;
  -moz-transition: $style $speed $animate;
  -o-transition: $style $speed $animate;
  -ms-transition: $style $speed $animate;
  transition: $style $speed $animate;
}

@mixin transition-2($param: all 1s ease-in-out) {
  -webkit-transition: $param;
  -moz-transition: $param;
  -o-transition: $param;
  -ms-transition: $param;
  transition: $param;
}

@mixin transform-rotate($deg) {
  -moz-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -webkit-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
}